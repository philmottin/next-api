{
	"info": {
		"_postman_id": "634ff299-8c15-45ef-b2a9-ad524ac2a7a6",
		"name": "DEVCamper API",
		"description": "Backend API for the DevCamper application to manage bootcamps, courses, reviews, users and authentication.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Bootcamps",
			"item": [
				{
					"name": "Get all bootcamps",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/bootcamps",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps"
							]
						},
						"description": "Fetch all bootcamps from database. Include pagination, filtering, etc."
					},
					"response": []
				},
				{
					"name": "Get all bootcamps VISUALIZED TEST SCRIPT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `",
									"    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\"",
									"        crossorigin=\"anonymous\">",
									"    <style type=\"text/css\">",
									"        body { font-size: 12px; background: #eee; padding: 16px;}",
									"        .card { border-radius: 8px; box-shadow: 0 4px 10px rgba(0,0,0,.15); -webkit-box-shadow: 0 4px 10px rgba(0,0,0,.15); -moz-box-shadow: 0 4px 10px rgba(0,0,0,.15);}",
									"        .card-topper { border-top-right-radius: 8px; border-top-left-radius: 8px; padding: 8px 16px; font-size: 12px; font-weight: 600; text-transform: uppercase;}",
									"        .card-topper.title { background-color: #173F5F; color: #ffffff;}",
									"        ",
									"    </style>",
									"    <div class=\"container-fluid\">",
									"        <div class=\"row\">",
									"            <div class=\"col mb-4\">",
									"                <h1>Bootcamps</h1>",
									"            </div>",
									"        </div>",
									"        <div class=\"row\">",
									"            {{#each response.data}}",
									"            <div class=\"col-sm-6 col-lg-4 col-xl-3 mb-5\">",
									"                <div class=\"card\">",
									"                    <div class=\"test card-topper card-img-top title\">{{name}}</div>",
									"                    <div class=\"card-body\">",
									"                        <h2>{{name}}</h2>",
									"                        <address>{{street}}<br>{{location.city}}, {{location.state}} {{location.zipcode}}</address>",
									"                        <a href=\"{{website}}\" class=\"card-link\" target=\"_blank\" rel=\"noopener noreferrer\">Website</a>",
									"                        <a href=\"https://www.google.com/maps/search/?api=1&query={{name}} {{location.state}}\" class=\"card-link\" target=\"_blank\" rel=\"noopener noreferrer\">Map</a>",
									"                    </div>",
									"                </div>",
									"            </div>",
									"            {{/each}}",
									"        </div>",
									"    </div>",
									"`;",
									"",
									"// Set visualizer",
									"pm.visualizer.set(template, {",
									"    // Pass the response body parsed as JSON as `data`",
									"    response: pm.response.json()",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/bootcamps",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get bootcamps by distance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/bootcamps/radius/02118/10",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"radius",
								"02118",
								"10"
							]
						},
						"description": "Get bootcamps within a radius of a specific zipcode"
					},
					"response": []
				},
				{
					"name": "Get single bootcamp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/bootcamps/600c5734349af710de4ea5d8",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"600c5734349af710de4ea5d8"
							]
						},
						"description": "Get single bootcamp by id"
					},
					"response": []
				},
				{
					"name": "Create new bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"Test bootcamp new\",\n\t\t\"description\": \"ModernTech has one goal, and that is to make you a rockstar developer and/or designer with a six figure salary. We teach both development and UI/UX\",\n\t\t\"website\": \"https://moderntech.com\",\n\t\t\"phone\": \"(222) 999-9999\",\n\t\t\"email\": \"enroll@moderntech.com\",\n\t\t\"address\": \"220 Pawtucket St, Lowell, MA 01854\",\n\t\t\"careers\": [\"Web Development\", \"UI/UX\", \"Mobile Development\"],\n\t\t\"housing\": false,\n\t\t\"jobAssistance\": true,\n\t\t\"jobGuarantee\": false,\n\t\t\"acceptGi\": true\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/bootcamps",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps"
							]
						},
						"description": "Add new bootcamp to database. Must be authenticated and must be publisher or admin."
					},
					"response": []
				},
				{
					"name": "Update bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"housing\": false\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/bootcamps/600c5734349af710de4ea5d8",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"600c5734349af710de4ea5d8"
							]
						},
						"description": "Update single bootcamp in database."
					},
					"response": []
				},
				{
					"name": "Delete bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/bootcamps/600c65df3d7e7c157cf4d6ed",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"600c65df3d7e7c157cf4d6ed"
							]
						},
						"description": "Delete single bootcamp from database."
					},
					"response": []
				},
				{
					"name": "Upĺoad photo to bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/bootcamps/5d725a1b7b292f5f8ceff788/photo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d725a1b7b292f5f8ceff788",
								"photo"
							]
						},
						"description": "Upĺoad photo to bootcamp"
					},
					"response": []
				}
			],
			"description": "Bootcamps CRUD functionality",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "Get all courses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/courses",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"courses"
							]
						},
						"description": "Get courses in database"
					},
					"response": []
				},
				{
					"name": "Get all courses from bootcamp",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/bootcamps/5d713995b721c3bb38c1f5d0/courses",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d713995b721c3bb38c1f5d0",
								"courses"
							]
						},
						"description": "Get the specific courses for a bootcamp"
					},
					"response": []
				},
				{
					"name": "Get single course",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/courses/5d725cb9c4ded7bcb480eaa1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"5d725cb9c4ded7bcb480eaa1"
							]
						},
						"description": "Get a single course by its ID"
					},
					"response": []
				},
				{
					"name": "Create bootcamp course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Custom Front End Web Development\",\n    \"description\": \"This course will provide you with all of the essentials to become a successful frontend web developer. You will learn to master HTML, CSS and front end JavaScript, along with tools like Git, VSCode and front end frameworks like Vue\",\n    \"weeks\": 8,\n    \"tuition\": 8000,\n    \"minimumSkill\": \"beginner\",\n    \"scholarhipsAvailable\": true\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/bootcamps/5d713995b721c3bb38c1f5d0/courses",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d713995b721c3bb38c1f5d0",
								"courses"
							]
						},
						"description": "Create a course for a specific bootcamp"
					},
					"response": []
				},
				{
					"name": "Update course",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tuition\": 13000,\n    \"minimumSkill\": \"advanced\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/courses/5d725c84c4ded7bcb480eaa0",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"5d725c84c4ded7bcb480eaa0"
							]
						},
						"description": "Update a course by its ID"
					},
					"response": []
				},
				{
					"name": "Delete course",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/courses/5d725c84c4ded7bcb480eaa0",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"5d725c84c4ded7bcb480eaa0"
							]
						},
						"description": "Delete course by its ID"
					},
					"response": []
				}
			],
			"description": "Create, read, update and delete courses"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"John Doe\",\n\t\t\"email\": \"john@gmail.com\",\n\t\t\"role\": \"publisher\",\n\t\t\"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"email\": \"john@gmail.com\",\n\t\t\"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login noSQL injection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": {\"$gt\": \"\"},\n    \"password\": {\"$gt\": \"\"}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get logged in user via token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/forgotpassword",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"forgotpassword"
							]
						},
						"description": "Generate password token and send email"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\":\"1234567\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/resetpassword/88976795425c488cf065fc8dfcda86f37c9f914d",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"resetpassword",
								"88976795425c488cf065fc8dfcda86f37c9f914d"
							]
						},
						"description": "Reset user password using token"
					},
					"response": []
				},
				{
					"name": "Update User Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john@gmail.com\",\n    \"name\": \"John Doe\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/updatedetails",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updatedetails"
							]
						},
						"description": "Update logged in user name and email"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"1234567\",\n    \"newPassword\": \"123456\"\n    \n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/auth/updatepassword",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updatepassword"
							]
						},
						"description": "Update logged in user password, send in the body currentPassword and newPassword"
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/auth/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Clear token cookie"
					},
					"response": []
				}
			],
			"description": "Routes for user authentication including register, login, reset password."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get all users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Get all users (admin)"
					},
					"response": []
				},
				{
					"name": "Get single user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/users/5c8a1d5b0190b214360dc038",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"5c8a1d5b0190b214360dc038"
							]
						},
						"description": "Get single user by id (admin)"
					},
					"response": []
				},
				{
					"name": "Create user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test user 1\",\n    \"email\": \"phil@gmail.com\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Add user to database (admin)"
					},
					"response": []
				},
				{
					"name": "Update  user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test user 9\"    \n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/users/60127a05a6a52f6a82c58fd7",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"60127a05a6a52f6a82c58fd7"
							]
						},
						"description": "Update user in database (admin)"
					},
					"response": []
				},
				{
					"name": "Delete  user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/users/60127a05a6a52f6a82c58fd7",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"60127a05a6a52f6a82c58fd7"
							]
						},
						"description": "Delete user from database (admin)"
					},
					"response": []
				}
			],
			"description": "CRUD functionality for users only available do admins"
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "Get all reviews",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/reviews",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"reviews"
							]
						},
						"description": "Get all reviews from database and populate with bootcamps name and description"
					},
					"response": []
				},
				{
					"name": "Get reviews for bootcamp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/bootcamps/5d725a037b292f5f8ceff787/reviews",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d725a037b292f5f8ceff787",
								"reviews"
							]
						},
						"description": "Fetch reviews for a specific bootcamp"
					},
					"response": []
				},
				{
					"name": "Get single review",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/reviews/5d7a514b5d2c12c7449be025",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5d7a514b5d2c12c7449be025"
							]
						},
						"description": "Fetch a review from database by id and populate bootcamp name and description"
					},
					"response": []
				},
				{
					"name": "Add Review for Bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Nice bootcamp\",\n    \"text\": \"I learned a lot\",\n    \"rating\": 8\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/bootcamps/60134bf2b45a4224c78acb11/reviews",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"60134bf2b45a4224c78acb11",
								"reviews"
							]
						},
						"description": "Insert review for a specific bootcamp"
					},
					"response": []
				},
				{
					"name": "Update review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "json type",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"had fun\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/reviews/60134cb4b45a4224c78acb13",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"60134cb4b45a4224c78acb13"
							]
						},
						"description": "Update review in database"
					},
					"response": []
				},
				{
					"name": "Delete review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/reviews/60134c7cb45a4224c78acb12",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"60134c7cb45a4224c78acb12"
							]
						},
						"description": "Remove review from database"
					},
					"response": []
				}
			],
			"description": "Manage course reviews",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}